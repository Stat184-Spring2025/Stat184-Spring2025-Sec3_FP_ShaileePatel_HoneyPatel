---
title: "Fueling Your Workout: Fast-Food Chain Menu Analysis for Fitness Enthusiasts"
subtitle: "Final Project for Stat 184"
author: "Honey Patel, Shailee Patel"
format:
  pdf:
    toc: false
    fig-align: center
    cap-location: top
    geometry: top=1in, left=1in, right=1in, bottom=1in
    code-overflow: wrap
    code-block-font-size: 90%
    pdf-engine: xelatex
    documentclass: scrartcl
---

## 

# Introduction

Maintaining adequate protein intake is critical for fitness goals, including muscle repair and growth. However, when pressed for time, many turn to fast-food options, which vary widely in protein content. This report explores how popular fast-food chains compare in terms of protein, fat, and calories in order to help guide fitness-minded consumers toward better choices.

# Data Provenance

Our analysis draws on data from two publicly available datasets:

1.  **fastfood.csv**: Nutritional data (calories, carbohydrates, fats, protein) for menu items from major U.S. fast-food chains, sourced from [Fast Food Nutrition Dataset](https://www.kaggle.com/datasets/ulrikthygepedersen/fastfood-nutrition/data).
2.  **Nutrition_Value_Dataset.csv**: Additional fast-food menu data, including newer items and broader restaurant coverage, sourced from [Fast Food Joint Nutrition Values Dataset](https://www.kaggle.com/datasets/rakkesharv/fast-food-joint-nutrition-values-dataset).

These datasets were merged after cleaning to create a comprehensive database for analysis. The cases in our data represent individual menu items across various restaurant chains.

# FAIR and CARE Principles

Our project follows the FAIR principles by:

-   **Findable**: We used publicly available datasets with clear metadata.

-   **Accessible**: Files are hosted in open formats such as CSV without any access restrictions.

-   **Interoperable**: All data columns follow standard nutritional labeling (i.e. Calories, Fat, Protein).

-   **Reusable**: Our cleaning steps are documented and allow for others to reuse the combined, cleaned dataset.

We have also made sure that the CARE principles are ensured. The data used in our project is solely for educational purposes with attention given to responsibly interpreting its context. In presenting our findings, we have made a point to avoid misrepresenting the fast-food chains involved as we recognize the importance of maintaining ethical standards when working with publicly available data.

# Focused and Derived Attributes

We concentrate on three key measures per menu item:

-   **Calories (kCal)**: Total energy per item (original attribute from dataset).
-   **Fat (g)**: Total fat content per item (original attribute).
-   **Protein (g)**: Total protein content per item (original attribute).
-   **Protein-to-Fat Ratio (PF Ratio)**: A newly derived attribute, calculated as Protein divided by Fat which is used to identify lean protein options.

These attributes allow us to assess the nutritional quality of menu items and make recommendations suited to fitness-focused consumers.

# Analysis and Findings

```{r setup, include=FALSE}
library(tidyverse)
library(kableExtra)

#reload data to prevent errors
data <- read_csv("https://raw.githubusercontent.com/Stat184-Spring2025/Stat184-Spring2025-Sec3_FP_ShaileePatel_HoneyPatel/refs/heads/dev/combined_nutrition_data.csv")
```

## 1. Calorie Distribution by Restaurant

**Figure 1** displays the average protein content of menu items at each major fast-food chain in the dataset. By comparing these averages, we can begin to identify which restaurants may be better suited for individuals aiming to maintain or build muscle through higher protein intake.

Interestingly, some chains consistently offer protein-rich items, likely due to customizable or health-focused menu options, like items found at Chipotle or Subway. Others restaurants, like traditional burger or dessert-focused chains, tend to have lower average protein content, while reflects a menu composition centered more on indulgence than nutrition.

This comparison provides a foundational view of typical fast-food options and introduces key nutritional patterns explored throughout this report.

```{r,echo=FALSE,warning= FALSE,message=FALSE}
library(ggplot2)
library(dplyr)

# Ensure restaurants are ordered alphabetically for better readability
data <- data %>%
  mutate(Restaurant = factor(Restaurant, levels = sort(unique(Restaurant))))

# Boxplot with improvements
ggplot(data, aes(x = Restaurant, y = Calories)) +
  geom_boxplot() +
  coord_flip() +  # Horizontal layout for better label readability
  theme_minimal() +
  theme(
    axis.title.x = element_text(),
    axis.title.y = element_text()
  ) +
  labs(
    x = "Restaurant",
    y = "Calories",
    title = "Figure 1. Boxplot of Calories by Restaurant"
  )

```

In summary, Figure 1 highlights meaningful differences in the nutritional focus of each chain. For individuals with fitness goals, restaurants offering higher average protein values may be more compatible with muscle-building diets. This insight encourages consumers to look beyond brand names and instead use nutritional metrics, like average protein content, to help guide their choices more strategically.

## 2. Average Calories, Fat, and Protein

Table 1 summarizes per-chain averages. Key takeaways from Figure 2, which presents a faceted bar chart of average calories, fat, and protein by restaurant:

All three nutrients are shown together in a single figure using facets. Restaurants are consistently ordered to make cross-nutrient comparisons easier. This unified design helps readers quickly assess how each chain performs nutritionally.

Insights for fitness-focused readers:

Chick Fil-A and KFC stand out for high average protein content. Starbucks and Domino’s offer relatively lower-calorie and lower-fat menu options.

```{r, echo=FALSE, warning=FALSE, message=FALSE}
library(tidyverse)

# Step 1: Calculate average stats per restaurant
restaurant_stats <- data %>%
  group_by(Restaurant) %>%
  summarise(
    avg_calories = mean(Calories, na.rm = TRUE),
    avg_fat      = mean(Fat, na.rm = TRUE),
    avg_protein  = mean(Protein, na.rm = TRUE)
  )

# Step 2: Pivot to long format for faceted plotting
stats_long <- restaurant_stats %>%
  pivot_longer(
    cols = c(avg_calories, avg_fat, avg_protein),
    names_to = "Nutrient",
    values_to = "Value"
  ) %>%
  mutate(
    Nutrient = recode(Nutrient,
                      avg_calories = "Average Calories",
                      avg_fat      = "Average Fat (g)",
                      avg_protein  = "Average Protein (g)"),
    Restaurant = factor(Restaurant, levels = sort(unique(Restaurant)))  # consistent order
  )

# Step 3: Create combined bar chart with facets
ggplot(stats_long, aes(x = Value, y = Restaurant)) +
  geom_col(fill = "#6495ED") +
  facet_wrap(~ Nutrient, scales = "free_x") +
  labs(
    title = "Figure 2. Average Nutritional Values by Restaurant",
    x = "Average Value",
    y = "Restaurant"
  ) +
  theme_minimal()
```

```{r,echo=FALSE,warning= FALSE,message=FALSE}
#Question 2 -----------------------------------------------------------
#Do different restaurants differ in how healthy their items are (based on calories, fat, and protein)?
#Goal: Compare central tendencies of Calories, Fat, and Protein across restaurants to assess relative “healthiness.”
#Selection of visualization: Summary table + grouped bar chart
#Rationale: 
# - Table gives exact average values for each metric  
# - Grouped bar chart lets you visually compare multiple metrics side-by-side

#1. Compute per-restaurant averages
restaurant_stats <- data %>%
  group_by(Restaurant) %>%
  summarise(
    avg_calories = mean(Calories),
    avg_fat      = mean(Fat),
    avg_protein  = mean(Protein)
  )
restaurant_stats %>%
  kable(
    digits    = 1,
    booktabs  = TRUE,
    col.names = c("Restaurant", "Avg Calories", "Avg Fat (g)", "Avg Protein (g)"),
    caption   = "Table 2. Average Calories, Fat, and Protein by Restaurant"
  ) %>%
  kable_styling(
    latex_options = c("striped", "hold_position"),  # adds zebra stripes & fixes float
    full_width    = FALSE,
    position      = "center"
  )
```

## 3. Ranking Protein-Fat Ratios Per Restaurants

**Table 2** showcases the top three menu items at each restaurant based on the protein-to-fat (PF) ratio, a derived metric used to highlight lean menu options. As shown in Schoenfeld and Aragon’s research, consuming protein-dense meals evenly throughout the day enhances muscle protein synthesis and supports strength-building (*Journal of the International Society of Sports Nutrition*).

This table moves the report from general trends into specific, actionable recommendations. For example, a grilled chicken bowl with a PF ratio above 5 is likely a much leaner and more fitness-friendly choice than a sandwich with the same calories but a PF ratio below 1. By filtering out items with zero fat and focusing on realistic choices with both protein and fat values, this ranking provides practical guidance for optimizing fast food decisions without needing to scrutinize every nutrition label.

```{r, echo=FALSE, warning=FALSE, message=FALSE}
library(tidyverse)
library(kableExtra)
library(dplyr)

#4. Ranking Protein-Fat Ratios Per Restaurants
#Add PF ration calculation
data <- data %>%
  mutate(PF_Ratio = Protein / Fat)

#Get top 3 items per restaurant by PF ratio
top3_pf_items <- data %>%
  filter(Fat > 0, !is.na(Protein), !is.na(Fat)) %>%
  group_by(Restaurant) %>%
  slice_max(order_by = PF_Ratio, n = 3, with_ties = FALSE) %>%
  ungroup()

#Create visualization filtered by top 3 items per restaurant based on PF ratio
top3_pf_items %>%
  select(Restaurant, Product, Calories, Protein, Fat, PF_Ratio) %>%
  arrange(Restaurant, desc(PF_Ratio)) %>%
  kable(
    digits = 2,
    booktabs = TRUE,
    col.names = c(
      "Restaurant",
      "Menu Item",
      "Calories",
      "Protein (g)",
      "Fat (g)",
      "Protein-to-Fat Ratio (P/F)"
    ),
    caption = "Top 3 Menu Items per Restaurant by Protein-to-Fat Ratio"
  ) %>%
  kable_styling(
    latex_options = c("striped", "hold_position"),
    full_width = FALSE,
    position = "center",
    font_size = 9
  ) %>%
  column_spec(6, width = "5em")
```

**Table 3** presents the highest-ranking individual menu item from each restaurant based on protein-to-fat (PF) ratio, ordered from highest to lowest across all chains. The Dietary Guidelines for Americans recommend limiting saturated fat to less than 10% of daily caloric intake while prioritizing nutrient-dense protein sources which makes the PF ratio an efficient way to screen for healthier fast-food options (*Dietary Guidelines for Americans, 2020–2025*). This table gives a focused view of the single best nutritional option per brand which is particularly ideal for people who want a quick, optimized recommendation without having to compare multiple items.

```{r, echo=FALSE, warning=FALSE, message=FALSE}
library(tidyverse)
library(kableExtra)
library(dplyr)

#Add PF ratio calculation
data <- data %>%
  mutate(PF_Ratio = Protein / Fat)

#Select the top item per restaurant by PF ratio
best_pf_item <- data %>%
  filter(Fat > 0, !is.na(Protein), !is.na(Fat)) %>%
  group_by(Restaurant) %>%
  slice_max(order_by = PF_Ratio, n = 1, with_ties = FALSE) %>%
  ungroup()

#Create visualization filtered by single-best item
best_pf_item %>%
  select(Restaurant, Product, Calories, Protein, Fat, PF_Ratio) %>%
  arrange(desc(PF_Ratio)) %>%
  kable(
    digits = 2,
    booktabs = TRUE,
    col.names = c(
      "Restaurant",
      "Menu Item",
      "Calories",
      "Protein (g)",
      "Fat (g)",
      "Protein-to-Fat Ratio (P/F)"
    ),
    caption = "Single-Best Menu Item per Restaurant by Protein-to-Fat Ratio Ranked"
  ) %>%
  kable_styling(
    latex_options = c("striped", "hold_position"),
    full_width = FALSE,
    position = "center",
    font_size = 9               
  ) %>%
  column_spec(6, width = "5em")  
```

Together, Tables 2 and 3 transform general nutritional trends into concrete meal suggestions. Table 2 highlights multiple high-performing options per restaurant, giving variety to people who dine frequently at the same chain. Table 3 then filters that information even further by identifying the single best item at each restaurant based on its protein-to-fat ratio. Whether a consumer is seeking flexibility or a quick choice, these tables provide accessible support for making healthier fast-food decisions without having to sacrifice convenience/taste.

# Conclusion

This analysis set out to answer a common but complex question: how can people with specific fitness goals make informed choices when eating at fast-food restaurants? By examining calories, fat, and protein content, alongside the derived protein-to-fat ratio attribute, we were able to uncover meaningful differences in the nutritional profiles of major chains and their individual menu items.

Visualizations helped with provided a high-level overview of where protein-rich, fitness-friendly meals are most likely to be found, while tables narrowed the focus to specific recommendations. Chains like Chipotle and Subway consistently stood out for offering more high-protein options, while other restaurants had fewer lean items hidden among heavier choices.

Ultimately, this report shows that nutritional awareness doesn’t have to disappear when dining out. With the right data, people can navigate fast food more strategically by selecting meals that support strength, performance, and overall health without requiring thorough meal planning.

\newpage

# References

1.  Phillips, S. M., & Van Loon, L. J. C. (2011). *Dietary protein for athletes: From requirements to optimum adaptation*. Journal of Sports Sciences, 29(sup1), S29–S38. <https://doi.org/10.1080/02640414.2011.619204>\
    \> (Use this to support claims about protein for muscle repair, growth, and satiety.)

2.  Pasiakos, S. M., Lieberman, H. R., & McLellan, T. M. (2014). *Effects of protein supplements on muscle damage, soreness and recovery of muscle function and physical performance: A systematic review*. Sports Medicine, 44(5), 655–670. <https://doi.org/10.1007/s40279-013-0137-7>\
    \> (Supports use of high-protein diets in active populations.)

3.  Harvard T.H. Chan School of Public Health. *The Nutrition Source – Fats and Cholesterol*. <https://www.hsph.harvard.edu/nutritionsource/what-should-you-eat/fats-and-cholesterol/>\
    \> (Use to support the risks of excess dietary fat and the importance of fat quality.)

4.  U.S. Department of Health and Human Services and U.S. Department of Agriculture. (2020). *Dietary Guidelines for Americans, 2020–2025*. 9th Edition. <https://www.dietaryguidelines.gov/>\
    \> (General guidance for balanced nutrient intake and fast food moderation.)

5.  Schoenfeld, B. J., & Aragon, A. A. (2018). *How much protein can the body use in a single meal for muscle-building? Implications for daily protein distribution.* Journal of the International Society of Sports Nutrition, 15(1), 10. <https://doi.org/10.1186/s12970-018-0215-1>\
    \> (Helps justify looking at protein distribution per meal or item.)

    \newpage

# Code Appendix

```{r,codeAppend, ref.label=knitr::all_labels(),echo = TRUE, eval = FALSE}
#Load required library
library(tidyverse)

#Read the original CSVs
fastfood <- read_csv("https://raw.githubusercontent.com/Stat184-Spring2025/Stat184-Spring2025-Sec3_FP_ShaileePatel_HoneyPatel/refs/heads/main/fastfood.csv")
nutrition <- read_csv("https://raw.githubusercontent.com/Stat184-Spring2025/Stat184-Spring2025-Sec3_FP_ShaileePatel_HoneyPatel/refs/heads/main/Nutrition_Value_Dataset.csv")

#Clean the fast food CSV
fastfood_clean <- fastfood %>%
  select(
    Restaurant = restaurant,
    Product = item,
    Calories = calories,
    Carbs = total_carb,
    Fat = total_fat,
    Cholesterol = cholesterol,
    Protein = protein
  ) %>%
  mutate(
    Restaurant = str_to_title(Restaurant),
    Restaurant = str_replace_all(Restaurant, "[^[:alnum:] ]", ""),
    Restaurant = str_squish(Restaurant)
  )

#Clean the second nutrition CSV
nutrition_clean <- nutrition %>%
  select(
    Restaurant = Company,
    Product = Product,
    Calories = `Energy (kCal)`,
    Carbs = `Carbohydrates (g)`,
    Fat = `Total Fat (g)`,
    Cholesterol = `Cholesterol (mg)`,
    Protein = `Protein (g)`
  ) %>%
  mutate(
    Restaurant = str_to_title(Restaurant),
    Restaurant = str_replace_all(Restaurant, "[^[:alnum:] ]", ""),
    Restaurant = str_squish(Restaurant)
  )

#Combine the cleaned datasets
combined_nutrition <- bind_rows(fastfood_clean, nutrition_clean)

#Save to a new CSV file
write_csv(combined_nutrition, "combined_nutrition_data.csv")

#Load require libraries
library(tidyverse)
library(RColorBrewer)
library(knitr)
library(kableExtra)

#Load the combined_nutrition_data.csv file 
data <- read_csv("https://raw.githubusercontent.com/Stat184-Spring2025/Stat184-Spring2025-Sec3_FP_ShaileePatel_HoneyPatel/refs/heads/dev/combined_nutrition_data.csv")

#Clean data further to prevent errors in visuali
data <- data %>%
  mutate(Restaurant = str_to_title(Restaurant)) %>%
  mutate(Restaurant = str_replace_all(Restaurant, "[^[:alnum:] ]", "")) %>%
  mutate(Restaurant = str_squish(Restaurant)) %>%
  filter(!is.na(Protein))

#Question 1 -----------------------------------------------------------
#How does calorie count vary by restaurant?
#Goal: Reveal distribution of restaurants using calorie count (spread, outliers)
#Selection of visualization: Box Plot
#Rationale: Shows median, IQR, and outliers at once. We care about variation in data, e.g., whether Restaurant A has a few extremely high-calorie outliers vs. Restaurant B’s consistently mid-range menu—a box plot (or violin plot) is by far the more informative choice.

library(ggplot2)
library(dplyr)

# Ensure restaurants are ordered alphabetically for better readability
data <- data %>%
  mutate(Restaurant = factor(Restaurant, levels = sort(unique(Restaurant))))

# Boxplot with improvements
ggplot(data, aes(x = Restaurant, y = Calories)) +
  geom_boxplot() +
  coord_flip() +  # Horizontal layout for better label readability
  theme_minimal() +
  theme(
    axis.title.x = element_text(),
    axis.title.y = element_text()
  ) +
  labs(
    x = "Restaurant",
    y = "Calories",
    title = "Figure 1. Boxplot of Calories by Restaurant"
  )
library(tidyverse)

# Step 1: Calculate average stats per restaurant
restaurant_stats <- data %>%
  group_by(Restaurant) %>%
  summarise(
    avg_calories = mean(Calories, na.rm = TRUE),
    avg_fat      = mean(Fat, na.rm = TRUE),
    avg_protein  = mean(Protein, na.rm = TRUE)
  )

# Step 2: Pivot to long format for faceted plotting
stats_long <- restaurant_stats %>%
  pivot_longer(
    cols = c(avg_calories, avg_fat, avg_protein),
    names_to = "Nutrient",
    values_to = "Value"
  ) %>%
  mutate(
    Nutrient = recode(Nutrient,
                      avg_calories = "Average Calories",
                      avg_fat      = "Average Fat (g)",
                      avg_protein  = "Average Protein (g)"),
    Restaurant = factor(Restaurant, levels = sort(unique(Restaurant)))  # consistent order
  )

# Step 3: Create combined bar chart with facets
ggplot(stats_long, aes(x = Value, y = Restaurant)) +
  geom_col(fill = "#6495ED") +
  facet_wrap(~ Nutrient, scales = "free_x") +
  labs(
    title = "Figures 2–4. Average Nutritional Values by Restaurant",
    x = "Average Value",
    y = "Restaurant"
  ) +
  theme_minimal()

#Question 2 -----------------------------------------------------------
#Do different restaurants differ in how healthy their items are (based on calories, fat, and protein)?
#Goal: Compare central tendencies of Calories, Fat, and Protein across restaurants to assess relative “healthiness.”
#Selection of visualization: Summary table + grouped bar chart
#Rationale: 
# - Table gives exact average values for each metric  
# - Grouped bar chart lets you visually compare multiple metrics side-by-side

#1. Compute per-restaurant averages
restaurant_stats <- data %>%
  group_by(Restaurant) %>%
  summarise(
    avg_calories = mean(Calories),
    avg_fat      = mean(Fat),
    avg_protein  = mean(Protein)
  )
restaurant_stats %>%
  kable(
    digits    = 1,
    booktabs  = TRUE,
    col.names = c("Restaurant", "Avg Calories", "Avg Fat (g)", "Avg Protein (g)"),
    caption   = "Average Calories, Fat, and Protein by Restaurant"
  ) %>%
  kable_styling(
    latex_options = c("striped", "hold_position"),  # adds zebra stripes & fixes float
    full_width    = FALSE,
    position      = "center"
  )

#Question 3 -----------------------------------------------------------
#Which menu items offer the best protein-to-fat ratio by restaurant?
#Goal: Help consumers identify lean, efficient options at each restaurant.
#Selection of visualization: Frequency table showing top 3 and single-best menu items per restaurant.
#Rationale: Nutrient-dense items with low fat and high protein are often desired for health/performance, this chart filters for that.

library(tidyverse)
library(kableExtra)
library(dplyr)

#4. Ranking Protein-Fat Ratios Per Restaurants
#Add PF ration calculation
data <- data %>%
  mutate(PF_Ratio = Protein / Fat)

#Get top 3 items per restaurant by PF ratio
top3_pf_items <- data %>%
  filter(Fat > 0, !is.na(Protein), !is.na(Fat)) %>%
  group_by(Restaurant) %>%
  slice_max(order_by = PF_Ratio, n = 3, with_ties = FALSE) %>%
  ungroup()

#Create visualization filtered by top 3 items per restaurant based on PF ratio
top3_pf_items %>%
  select(Restaurant, Product, Calories, Protein, Fat, PF_Ratio) %>%
  arrange(Restaurant, desc(PF_Ratio)) %>%
  kable(
    digits = 2,
    booktabs = TRUE,
    col.names = c(
      "Restaurant",
      "Menu Item",
      "Calories",
      "Protein (g)",
      "Fat (g)",
      "Protein-to-Fat Ratio (P/F)"
    ),
    caption = "Top 3 Menu Items per Restaurant by Protein-to-Fat Ratio"
  ) %>%
  kable_styling(
    latex_options = c("striped", "hold_position"),
    full_width = FALSE,
    position = "center",
    font_size = 9
  ) %>%
  column_spec(6, width = "5em")

#Add PF ratio calculation
data <- data %>%
  mutate(PF_Ratio = Protein / Fat)

#Select the top item per restaurant by PF ratio
best_pf_item <- data %>%
  filter(Fat > 0, !is.na(Protein), !is.na(Fat)) %>%
  group_by(Restaurant) %>%
  slice_max(order_by = PF_Ratio, n = 1, with_ties = FALSE) %>%
  ungroup()

#Create visualization filtered by single-best item
best_pf_item %>%
  select(Restaurant, Product, Calories, Protein, Fat, PF_Ratio) %>%
  arrange(desc(PF_Ratio)) %>%
  kable(
    digits = 2,
    booktabs = TRUE,
    col.names = c(
      "Restaurant",
      "Menu Item",
      "Calories",
      "Protein (g)",
      "Fat (g)",
      "Protein-to-Fat Ratio (P/F)"
    ),
    caption = "Single-Best Menu Item per Restaurant by Protein-to-Fat Ratio Ranked"
  ) %>%
  kable_styling(
    latex_options = c("striped", "hold_position"),
    full_width = FALSE,
    position = "center",
    font_size = 9               
  ) %>%
  column_spec(6, width = "5em")
```
