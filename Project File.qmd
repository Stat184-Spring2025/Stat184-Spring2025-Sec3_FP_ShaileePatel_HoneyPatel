---
title: "Fueling Your Workout: Fast-Food Chain Menu Analysis for Fitness Enthusiasts"
subtitle: "Final Project for Stat 184"
author: "Honey Patel, Shailee Patel"
format:
  pdf:
    toc: false
    fig-align: center
    cap-location: top
    geometry: top=1in, left=1in, right=1in, bottom=1in
    code-overflow: wrap
    code-block-font-size: 90%
    pdf-engine: xelatex
    documentclass: scrartcl
---

# Introduction

Maintaining adequate protein intake is critical for fitness goals, including muscle repair and growth. However, when pressed for time, many turn to fast-food options, which vary widely in protein content. This report explores how popular fast-food chains compare in terms of protein, fat, and calories—guiding fitness-minded consumers toward better choices.

# Data Provenance

Our analysis draws on two publicly available datasets:

1.  **fastfood.csv**:Nutritional data (calories, carbohydrates, fats, protein) for menu items from major U.S. fast-food chains, sourced from [Fast Food Nutrition Dataset](https://www.kaggle.com/datasets/ulrikthygepedersen/fastfood-nutrition/data).
2.  **Nutrition_Value_Dataset.csv**: Additional fast-food menu data, including newer items and broader restaurant coverage, sourced from [Fast Food Joint Nutrition Values Dataset](https://www.kaggle.com/datasets/rakkesharv/fast-food-joint-nutrition-values-dataset).

These datasets were merged after cleaning to create a comprehensive database for analysis. The cases in our data represent individual menu items across various restaurant chains.

# FAIR and CARE Principles

Our project follows the FAIR principles by:

-   **Findable**: We used publicly available datasets with clear metadata.

-   **Accessible**: Files are hosted in open formats such as CSV without any access restrictions.

-   **Interoperable**: All data columns follow standard nutritional labeling (i.e. Calories, Fat, Protein).

-   **Reusable**: Our cleaning steps are documented and allow for others to reuse the combined, cleaned dataset.

We have also made sure that the CARE principles are ensured. The data used in our project is solely for educational purposes with attention given to responsibly interpreting its context. In presenting our findings, we have made a point to avoid misrepresenting the fast-food chains involved as we recognize the importance of maintaining ethical standards when working with publicly available data.

# Focused and Derived Attributes

We concentrate on three key measures per menu item:

-   **Calories (kCal)**: Total energy per item (original attribute from dataset).
-   **Fat (g)**: Total fat content per item (original attribute).
-   **Protein (g)**: Total protein content per item (original attribute).
-   **Protein-to-Fat Ratio (PF Ratio)**: A newly derived attribute, calculated as Protein divided by Fat which is used to identify lean protein options.

These attributes allow us to assess the nutritional quality of menu items and make recommendations suited to fitness-focused consumers.

# Analysis and Findings

```{r setup, include=FALSE}
library(tidyverse)
library(kableExtra)

#reload data to prevent errors
data <- read_csv("https://raw.githubusercontent.com/Stat184-Spring2025/Stat184-Spring2025-Sec3_FP_ShaileePatel_HoneyPatel/refs/heads/dev/combined_nutrition_data.csv")
```

## 1. Calorie Distribution by Restaurant

A box plot (Figure 1) shows the **spread, median, and outliers** of calorie counts across each chain. This highlights variation—for example, KFC has wider calorie ranges due to high-calorie menu items.

```{r,echo=FALSE,warning= FALSE,message=FALSE}
library(ggplot2)
library(dplyr)

# Ensure restaurants are ordered alphabetically for better readability
data <- data %>%
  mutate(Restaurant = factor(Restaurant, levels = sort(unique(Restaurant))))

# Boxplot with improvements
ggplot(data, aes(x = Restaurant, y = Calories)) +
  geom_boxplot() +
  coord_flip() +  # Horizontal layout for better label readability
  theme_minimal() +
  theme(
    axis.title.x = element_text(),
    axis.title.y = element_text()
  ) +
  labs(
    x = "Restaurant",
    y = "Calories",
    title = "Figure 1. Boxplot of Calories by Restaurant"
  )

```

## 2. Average Calories, Fat, and Protein

Table 1 summarizes **per-chain averages**. Key takeaways from **Figure 2**, which presents a **faceted bar chart** of average calories, fat, and protein by restaurant:

-   All three nutrients are shown together in a single figure using facets.

-   Restaurants are consistently ordered to make cross-nutrient comparisons easier.

-   This unified design helps readers quickly assess how each chain performs nutritionally.

**Insights for fitness-focused readers**:

-   **Chick Fil-A** and **KFC** stand out for high average protein content.

-   **Starbucks** and **Domino’s** offer relatively lower-calorie and lower-fat menu options.

```{r,echo=FALSE,warning= FALSE,message=FALSE}
library(tidyverse)

# Step 1: Calculate average stats per restaurant
restaurant_stats <- data %>%
  group_by(Restaurant) %>%
  summarise(
    avg_calories = mean(Calories, na.rm = TRUE),
    avg_fat      = mean(Fat, na.rm = TRUE),
    avg_protein  = mean(Protein, na.rm = TRUE)
  )

# Step 2: Pivot to long format for faceted plotting
stats_long <- restaurant_stats %>%
  pivot_longer(
    cols = c(avg_calories, avg_fat, avg_protein),
    names_to = "Nutrient",
    values_to = "Value"
  ) %>%
  mutate(
    Nutrient = recode(Nutrient,
                      avg_calories = "Average Calories",
                      avg_fat      = "Average Fat (g)",
                      avg_protein  = "Average Protein (g)"),
    Restaurant = factor(Restaurant, levels = sort(unique(Restaurant)))  # consistent order
  )

# Step 3: Create combined bar chart with facets
ggplot(stats_long, aes(x = Value, y = Restaurant)) +
  geom_col(fill = "#6495ED") +
  facet_wrap(~ Nutrient, scales = "free_x") +
  labs(
    title = "Figures 2. Average Nutritional Values by Restaurant",
    x = "Average Value",
    y = "Restaurant"
  ) +
  theme_minimal()

```

Table 1 shows each bars' **exact** values:

```{r,echo=FALSE,warning= FALSE,message=FALSE}
#Question 2 -----------------------------------------------------------
#Do different restaurants differ in how healthy their items are (based on calories, fat, and protein)?
#Goal: Compare central tendencies of Calories, Fat, and Protein across restaurants to assess relative “healthiness.”
#Selection of visualization: Summary table + grouped bar chart
#Rationale: 
# - Table gives exact average values for each metric  
# - Grouped bar chart lets you visually compare multiple metrics side-by-side

#1. Compute per-restaurant averages
restaurant_stats <- data %>%
  group_by(Restaurant) %>%
  summarise(
    avg_calories = mean(Calories),
    avg_fat      = mean(Fat),
    avg_protein  = mean(Protein)
  )
restaurant_stats %>%
  kable(
    digits    = 1,
    booktabs  = TRUE,
    col.names = c("Restaurant", "Avg Calories", "Avg Fat (g)", "Avg Protein (g)"),
    caption   = "Table 1: Average Calories, Fat, and Protein by Restaurant"
  ) %>%
  kable_styling(
    latex_options = c("striped", "hold_position"),  # adds zebra stripes & fixes float
    full_width    = FALSE,
    position      = "center"
  )
```

## 3. Average Protein per Menu Item by Restaurant

A bar chart (Figure 5) displays the **average protein content** per menu item at each restaurant. This helps fitness-focused consumers identify chains that consistently offer more protein-rich choices. For example, restaurants like KFC and Chick-fil-A rank among the highest for average protein per item, while Starbucks and Dunkin' offer significantly lower averages.

```{r, echo=FALSE, warning=FALSE, message=FALSE}
library(tidyverse)

#3.Average Protein per Menu Item by Restaurant
protein_stats <- data %>%
  group_by(Restaurant) %>%
  summarize(Avg_Protein = mean(Protein, na.rm = TRUE)) %>% #group by restaurant and calulate average without missing values
  mutate(Avg_Protein = ifelse(is.na(Avg_Protein), 0, Avg_Protein)) #replace missing values with 0
ggplot(protein_stats, aes(x = reorder(Restaurant, Avg_Protein), y = Avg_Protein)) +
  geom_col(fill = "#4682B4") +
  coord_flip() +
  labs(
    title = "Figure 5. Average Protein per Menu Item by Restaurant",
    x = "Restaurant",
    y = "Avg Protein (g)"
  ) +
  theme_minimal()
```

## 4. Ranking Protein-Fat Ratios Per Restaurants

Table 2 summarizes the **top three** menu items from each restaurant based on their protein-to-fat ratio.\
This helps fitness-focused consumers quickly identify lean menu choices that offer the most protein with the least fat.

```{r, echo=FALSE, warning=FALSE, message=FALSE}
library(tidyverse)
library(kableExtra)
library(dplyr)

#4. Ranking Protein-Fat Ratios Per Restaurants
data <- data %>% #Compute protein-fat ratio
  mutate(PF_Ratio = Protein / Fat)

#top three filter
invisible(
  top3_pf_items <- data %>%
    filter(Fat > 0, !is.na(Protein), !is.na(Fat)) %>%
    group_by(Restaurant) %>%
    slice_max(order_by = PF_Ratio, n = 3, with_ties = FALSE) %>%
    ungroup()
)

top3_pf_items %>% #display the results as a table
  select(Restaurant, Product, Calories, Protein, Fat, PF_Ratio) %>%
  arrange(Restaurant, desc(PF_Ratio)) %>%
  kable(
    digits = 2,
    booktabs = TRUE,
    caption = "Table 2: Top 3 Menu Items per Restaurant by Protein-to-Fat Ratio"
  ) %>%
  kable_styling(
    latex_options = c("striped", "hold_position"),
    full_width = FALSE,
    position = "center"
  )
```

Table 3 then highlights the **single best** menu item for each restaurant based on the highest protein-to-fat ratio and then ranks it compared to other restaurants. This provides clear recommendations for consumers seeking maximum protein with minimal fat intake.

```{r, echo=FALSE, warning=FALSE, message=FALSE}
library(tidyverse)
library(kableExtra)
library(dplyr)

data <- data %>%
  mutate(PF_Ratio = Protein / Fat)

#single-best filter
invisible(
  best_pf_item <- data %>%
    filter(Fat > 0, !is.na(Protein), !is.na(Fat)) %>%
    group_by(Restaurant) %>%
    slice_max(order_by = PF_Ratio, n = 1, with_ties = FALSE) %>%
    ungroup()
)

best_pf_item %>% #display the results as a table
  select(Restaurant, Product, Calories, Protein, Fat, PF_Ratio) %>%
  arrange(desc(PF_Ratio)) %>%
  kable(
    digits = 2,
    booktabs = TRUE,
    caption = "Table 3: Single-Best Menu Item per Restaurant by Protein-to-Fat Ratio Ranked"
  ) %>%
  kable_styling(
    latex_options = c("striped", "hold_position"),
    full_width = FALSE,
    position = "center"
  )
```

# Code Appendix

```{r,codeAppend, ref.label=knitr::all_labels(),echo = TRUE, eval = FALSE}
#Load required library
library(tidyverse)

#Read the original CSVs
fastfood <- read_csv("https://raw.githubusercontent.com/Stat184-Spring2025/Stat184-Spring2025-Sec3_FP_ShaileePatel_HoneyPatel/refs/heads/main/fastfood.csv")
nutrition <- read_csv("https://raw.githubusercontent.com/Stat184-Spring2025/Stat184-Spring2025-Sec3_FP_ShaileePatel_HoneyPatel/refs/heads/main/Nutrition_Value_Dataset.csv")

#Clean the fast food CSV
fastfood_clean <- fastfood %>%
  select(
    Restaurant = restaurant,
    Product = item,
    Calories = calories,
    Carbs = total_carb,
    Fat = total_fat,
    Cholesterol = cholesterol,
    Protein = protein
  ) %>%
  mutate(
    Restaurant = str_to_title(Restaurant),
    Restaurant = str_replace_all(Restaurant, "[^[:alnum:] ]", ""),
    Restaurant = str_squish(Restaurant)
  )

#Clean the second nutrition CSV
nutrition_clean <- nutrition %>%
  select(
    Restaurant = Company,
    Product = Product,
    Calories = `Energy (kCal)`,
    Carbs = `Carbohydrates (g)`,
    Fat = `Total Fat (g)`,
    Cholesterol = `Cholesterol (mg)`,
    Protein = `Protein (g)`
  ) %>%
  mutate(
    Restaurant = str_to_title(Restaurant),
    Restaurant = str_replace_all(Restaurant, "[^[:alnum:] ]", ""),
    Restaurant = str_squish(Restaurant)
  )

#Combine the cleaned datasets
combined_nutrition <- bind_rows(fastfood_clean, nutrition_clean)

#Save to a new CSV file
write_csv(combined_nutrition, "combined_nutrition_data.csv")

#Load require libraries
library(tidyverse)
library(RColorBrewer)
library(knitr)
library(kableExtra)

#Load the combined_nutrition_data.csv file 
data <- read_csv("https://raw.githubusercontent.com/Stat184-Spring2025/Stat184-Spring2025-Sec3_FP_ShaileePatel_HoneyPatel/refs/heads/dev/combined_nutrition_data.csv")

#Clean data further to prevent errors in visuali
data <- data %>%
  mutate(Restaurant = str_to_title(Restaurant)) %>%
  mutate(Restaurant = str_replace_all(Restaurant, "[^[:alnum:] ]", "")) %>%
  mutate(Restaurant = str_squish(Restaurant)) %>%
  filter(!is.na(Protein))

#Question 1 -----------------------------------------------------------
#How does calorie count vary by restaurant?
#Goal: Reveal distribution of restaurants using calorie count (spread, outliers)
#Selection of visualization: Box Plot
#Rationale: Shows median, IQR, and outliers at once. We care about variation in data, e.g., whether Restaurant A has a few extremely high-calorie outliers vs. Restaurant B’s consistently mid-range menu—a box plot (or violin plot) is by far the more informative choice.

ggplot(data, aes(x = Restaurant, y = Calories, fill = Restaurant)) +
  geom_boxplot() +
  coord_flip() +                        #Horizontal boxes for readability
  theme_minimal() +
  theme(
    legend.position = "none",           #Drop the legend
    axis.title.x = element_text(),      
    axis.title.y = element_text()        
  ) +
  labs(
    x = "Restaurant",
    y = "Calories",
    title = "Calorie Distribution by Restaurant"
  )

#Question 2 -----------------------------------------------------------
#Do different restaurants differ in how healthy their items are (based on calories, fat, and protein)?
#Goal: Compare central tendencies of Calories, Fat, and Protein across restaurants to assess relative “healthiness.”
#Selection of visualization: Summary table + grouped bar chart
#Rationale: 
# - Table gives exact average values for each metric  
# - Grouped bar chart lets you visually compare multiple metrics side-by-side

#1. Compute per-restaurant averages
restaurant_stats <- data %>%
  group_by(Restaurant) %>%
  summarise(
    avg_calories = mean(Calories),
    avg_fat      = mean(Fat),
    avg_protein  = mean(Protein)
  )

restaurant_stats %>%
  filter(Restaurant=="Burger King") %>%
  pull(avg_protein)

#2. Bar chart: Average Calories
ggplot(restaurant_stats, aes(
    x = avg_calories,
    y = reorder(Restaurant, avg_calories)
  )) +
  geom_col(fill = "#FFA07A") +
  labs(
    title = "Average Calories by Restaurant",
    x     = "Avg Calories",
    y     = "Restaurant"
  ) +
  theme_minimal()

#3. Bar chart: Average Fat
ggplot(restaurant_stats, aes(
    x = avg_fat,
    y = reorder(Restaurant, avg_fat)
  )) +
  geom_col(fill = "#20B2AA") +
  labs(
    title = "Average Fat (g) by Restaurant",
    x     = "Avg Fat (g)",
    y     = "Restaurant"
  ) +
  theme_minimal()

#4. Bar chart: Average Protein
restaurant_stats %>%
  filter(!is.na(avg_protein)) %>%
  ggplot(aes(
    x = avg_protein,
    y = reorder(Restaurant, avg_protein)
  )) +
  geom_col(fill = "#778899") +
  labs(
    title = "Average Protein (g) by Restaurant",
    x = "Avg Protein (g)",
    y = "Restaurant"
  ) +
  theme_minimal()

#Question 3 -----------------------------------------------------------
#Which restaurant offers the highest average protein per menu item?
#Goal: Compare protein content across brands to identify which offer the most protein-heavy meals.
#Selection of visualization: Horizontal bar chart
#Rationale: Shows how different restaurants stack up in terms of lean/high-protein offerings.

data %>%
  group_by(Restaurant) %>% 
  summarize(Avg_Protein = mean(Protein, na.rm = TRUE)) %>% #group by restaurant and calulate average without missing values
  mutate(Avg_Protein = ifelse(is.na(Avg_Protein), 0, Avg_Protein)) %>% #replace missing values with 0
  ggplot(aes(x = reorder(Restaurant, Avg_Protein), y = Avg_Protein)) + #create bar graph
  geom_col(fill = "#4682B4") +
  coord_flip() +
  labs(
    title = "Average Protein per Menu Item by Restaurant",
    x = "Restaurant",
    y = "Avg Protein (g)"
  ) +
  theme_minimal()

#Question 4 -----------------------------------------------------------
#Which menu items offer the best protein-to-fat ratio by restaurant?
#Goal: Help consumers identify lean, efficient options at each restaurant.
#Selection of visualization: Frequency table showing top 3 and single-best menu items per restaurant.
#Rationale: Nutrient-dense items with low fat and high protein are often desired for health/performance, this chart filters for that.

library(tidyverse)
library(kableExtra)
library(dplyr)

data <- data %>% #Compute protein-fat ratio
  mutate(PF_Ratio = Protein / Fat)

#top three
invisible(
  top3_pf_items <- data %>%
    filter(Fat > 0, !is.na(Protein), !is.na(Fat)) %>%
    group_by(Restaurant) %>%
    slice_max(order_by = PF_Ratio, n = 3, with_ties = FALSE) %>%
    ungroup()
)

top3_pf_items %>% #display the results as a table
  select(Restaurant, Product, Calories, Protein, Fat, PF_Ratio) %>%
  arrange(Restaurant, desc(PF_Ratio)) %>%
  kable(
    digits = 2,
    booktabs = TRUE,
    caption = "Table 2: Top 3 Menu Items per Restaurant by Protein-to-Fat Ratio"
  ) %>%
  kable_styling(
    latex_options = c("striped", "hold_position"),
    full_width = FALSE,
    position = "center"
  )

#single-best filter
invisible(
  best_pf_item <- data %>%
    filter(Fat > 0, !is.na(Protein), !is.na(Fat)) %>%
    group_by(Restaurant) %>%
    slice_max(order_by = PF_Ratio, n = 1, with_ties = FALSE) %>%
    ungroup()
)

best_pf_item %>% #display the results as a table
  select(Restaurant, Product, Calories, Protein, Fat, PF_Ratio) %>%
  arrange(desc(PF_Ratio)) %>%
  kable(
    digits = 2,
    booktabs = TRUE,
    caption = "Table 3: Best Single Menu Item per Restaurant by Protein-to-Fat Ratio Ranked"
  ) %>%
  kable_styling(
    latex_options = c("striped", "hold_position"),
    full_width = FALSE,
    position = "center"
  )
```
